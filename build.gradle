plugins {
	id "fabric-loom" version "0.5-SNAPSHOT"
	id "maven-publish"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
		url = "https://minecraft.curseforge.com/api/maven"
	}
	jcenter()
	maven {
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
	}
	maven {
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		url = "https://jitpack.io/"
		content {
			includeGroup("com.github.Chocohead")
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v${project.tiny_version}")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	// Artifice
	include(modImplementation("com.lettuce.fudge:artifice:${project.artifice_version}"))

	// Jankson
	include(modImplementation("io.github.cottonmc:Jankson-Fabric:${project.jankson_version}"))

	// Stuff for dev env
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    modRuntime("me.shedaniel:RoughlyEnoughItems:${project.rei_version}")
	modRuntime("com.github.Chocohead:Data-Breaker-Lower:${project.databreaker_version}")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) {
		options.release = 8
	} else {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

tasks.withType(Wrapper) {
	gradleVersion = "6.8.1"
	distributionType = Wrapper.DistributionType.ALL
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
